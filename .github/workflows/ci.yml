# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['*']
  push:
    branches: ['*']
    tags: [v*]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  PGP_SECRET: ${{ secrets.PGP_SECRET }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.11, 2.13.3, 0.26.0-RC1]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v2

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v5
        with:
          java-version: ${{ matrix.java }}

      - name: Cache ivy2
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache coursier (generic)
        uses: actions/cache@v1
        with:
          path: ~/.coursier/cache/v1
          key: ${{ runner.os }}-generic-sbt-coursier-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache coursier (linux)
        if: contains(runner.os, 'linux')
        uses: actions/cache@v1
        with:
          path: ~/.cache/coursier/v1
          key: ${{ runner.os }}-sbt-coursier-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache coursier (macOS)
        if: contains(runner.os, 'macos')
        uses: actions/cache@v1
        with:
          path: ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-coursier-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache coursier (windows)
        if: contains(runner.os, 'windows')
        uses: actions/cache@v1
        with:
          path: ~/AppData/Local/Coursier/Cache/v1
          key: ${{ runner.os }}-sbt-coursier-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache sbt
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Check that workflows are up to date
        run: sbt ++${{ matrix.scala }} githubWorkflowCheck

      - run: sbt ++${{ matrix.scala }} ci

      - name: Upload target directory 'target' (${{ matrix.scala }})
        uses: actions/upload-artifact@v1
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}-target
          path: target

      - name: Upload target directory 'test-kit/js/target' (${{ matrix.scala }})
        uses: actions/upload-artifact@v1
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}-test-kit_js_target
          path: test-kit/js/target

      - name: Upload target directory 'js/target' (${{ matrix.scala }})
        uses: actions/upload-artifact@v1
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}-js_target
          path: js/target

      - name: Upload target directory 'test-kit/jvm/target' (${{ matrix.scala }})
        uses: actions/upload-artifact@v1
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}-test-kit_jvm_target
          path: test-kit/jvm/target

      - name: Upload target directory 'jvm/target' (${{ matrix.scala }})
        uses: actions/upload-artifact@v1
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}-jvm_target
          path: jvm/target

      - name: Upload target directory 'project/target'
        uses: actions/upload-artifact@v1
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-project_target
          path: project/target

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [0.26.0-RC1]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v2

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v5
        with:
          java-version: ${{ matrix.java }}

      - name: Cache ivy2
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache coursier (generic)
        uses: actions/cache@v1
        with:
          path: ~/.coursier/cache/v1
          key: ${{ runner.os }}-generic-sbt-coursier-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache coursier (linux)
        if: contains(runner.os, 'linux')
        uses: actions/cache@v1
        with:
          path: ~/.cache/coursier/v1
          key: ${{ runner.os }}-sbt-coursier-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache coursier (macOS)
        if: contains(runner.os, 'macos')
        uses: actions/cache@v1
        with:
          path: ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-coursier-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache coursier (windows)
        if: contains(runner.os, 'windows')
        uses: actions/cache@v1
        with:
          path: ~/AppData/Local/Coursier/Cache/v1
          key: ${{ runner.os }}-sbt-coursier-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache sbt
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Download target directory 'target' (2.12.11)
        uses: actions/download-artifact@v1
        with:
          name: target-${{ matrix.os }}-2.12.11-${{ matrix.java }}-target
          path: target

      - name: Download target directory 'target' (2.13.3)
        uses: actions/download-artifact@v1
        with:
          name: target-${{ matrix.os }}-2.13.3-${{ matrix.java }}-target
          path: target

      - name: Download target directory 'target' (0.26.0-RC1)
        uses: actions/download-artifact@v1
        with:
          name: target-${{ matrix.os }}-0.26.0-RC1-${{ matrix.java }}-target
          path: target

      - name: Download target directory 'test-kit/js/target' (2.12.11)
        uses: actions/download-artifact@v1
        with:
          name: target-${{ matrix.os }}-2.12.11-${{ matrix.java }}-test-kit_js_target
          path: test-kit/js/target

      - name: Download target directory 'test-kit/js/target' (2.13.3)
        uses: actions/download-artifact@v1
        with:
          name: target-${{ matrix.os }}-2.13.3-${{ matrix.java }}-test-kit_js_target
          path: test-kit/js/target

      - name: Download target directory 'test-kit/js/target' (0.26.0-RC1)
        uses: actions/download-artifact@v1
        with:
          name: target-${{ matrix.os }}-0.26.0-RC1-${{ matrix.java }}-test-kit_js_target
          path: test-kit/js/target

      - name: Download target directory 'js/target' (2.12.11)
        uses: actions/download-artifact@v1
        with:
          name: target-${{ matrix.os }}-2.12.11-${{ matrix.java }}-js_target
          path: js/target

      - name: Download target directory 'js/target' (2.13.3)
        uses: actions/download-artifact@v1
        with:
          name: target-${{ matrix.os }}-2.13.3-${{ matrix.java }}-js_target
          path: js/target

      - name: Download target directory 'js/target' (0.26.0-RC1)
        uses: actions/download-artifact@v1
        with:
          name: target-${{ matrix.os }}-0.26.0-RC1-${{ matrix.java }}-js_target
          path: js/target

      - name: Download target directory 'test-kit/jvm/target' (2.12.11)
        uses: actions/download-artifact@v1
        with:
          name: target-${{ matrix.os }}-2.12.11-${{ matrix.java }}-test-kit_jvm_target
          path: test-kit/jvm/target

      - name: Download target directory 'test-kit/jvm/target' (2.13.3)
        uses: actions/download-artifact@v1
        with:
          name: target-${{ matrix.os }}-2.13.3-${{ matrix.java }}-test-kit_jvm_target
          path: test-kit/jvm/target

      - name: Download target directory 'test-kit/jvm/target' (0.26.0-RC1)
        uses: actions/download-artifact@v1
        with:
          name: target-${{ matrix.os }}-0.26.0-RC1-${{ matrix.java }}-test-kit_jvm_target
          path: test-kit/jvm/target

      - name: Download target directory 'jvm/target' (2.12.11)
        uses: actions/download-artifact@v1
        with:
          name: target-${{ matrix.os }}-2.12.11-${{ matrix.java }}-jvm_target
          path: jvm/target

      - name: Download target directory 'jvm/target' (2.13.3)
        uses: actions/download-artifact@v1
        with:
          name: target-${{ matrix.os }}-2.13.3-${{ matrix.java }}-jvm_target
          path: jvm/target

      - name: Download target directory 'jvm/target' (0.26.0-RC1)
        uses: actions/download-artifact@v1
        with:
          name: target-${{ matrix.os }}-0.26.0-RC1-${{ matrix.java }}-jvm_target
          path: jvm/target

      - name: Download target directory 'project/target'
        uses: actions/download-artifact@v1
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-project_target
          path: project/target

      - name: Import signing key
        run: echo $PGP_SECRET | base64 -d | gpg --import

      - run: sbt ++${{ matrix.scala }} release